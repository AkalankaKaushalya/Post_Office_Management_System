<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnexit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA4dJREFUeF7t3L1v00AYx3ELBP8MYxUHRhrTDVFeAgOiYkGgjvwFTIhCJxYGRiqQ
        eEcsCHXuCCPhXcAAagUSchJU+nLcz/VDi/s0jnPPnUN8J32lKr6Y+KP4pRK9gBuquW9v3Kidakfh7XYj
        bOnaOjVi4ZhaOMY4qp3EMaeH33vEUf143AjfZ3Y28nUa4TsNdSxl2D5Us7m73ajPcm+uVFHtmroU7EpZ
        NofH+aeZlGVj4LRiJlU6fcpNJji4OOH84yZVvA/JhTu5W/ETKl88Hjb1tad2h9voS5rTQOGbzIu+zVqB
        vv7EzAafDjb4BrEbfRt5oJw8UE4eKCcPlJMVoM5kpNqH9rPb/rfEgTpHJ9Tai5dq5ekT1Z44wM6Rrnvh
        TBK3zTRRIMJRSz+SXCB1z51W6x8/q/VPXzTSFDvHJDGgLI4LJMKhf8sGkgjQTjiUDaQsDiWNZAyUh0NJ
        Iu2EQ0kiGQP9vnmD/ZBcK48fGt/d8nAoKSTzU0wf8MqDe+yH5DL5JvWLgzaAzO9sMhdpB0hl4CAZIGQR
        qSwcJAeELCCViYNkgZAgUtk4SB4ICSANAw6yA4QMkIYFB9kDQgMgdc9PDQ0OsguECiKpr4v865lc4CD7
        QKgoUk6ucJAbICSE5BIHuQNChkiucZBbIDQgUhk4yD0Q0kirz5+xEGzfllR3+iy/L8uVAlTkOYfq59cS
        GzkHGgSHKgPJKZAJDuUayRmQBA7lEskJkCQO5QrJOlARHNzKi9zdXCBZBSqKkzznJM9Jd9k5XLaRrAEN
        hEPvHyIkK0BGONSQIIkDieBQQ4AkCiSKQ5WMJAZkBYcqEUkEyCoOVRKSMZATHApIj+6z++ZK/i9AVOf3
        1WfGQKvz8+yHy2aMQxX4Ji1fn+X3USBjoM7hg2ptYYH9gJQYDtUHkgQOErkG9UISx6F6IEnhIBEgxCFZ
        w6GySIvf1fLsZX7ugIkBoa1I1nEoQrKAg0SBEJBw4XaCQ2mkXxen+W2GiQONWh4oJw+UkwfKyQPl5IFy
        8n/U27uf+Aa9zrzoo8brr4J0jSB+QuWr3wqwuBC/0Rc36icCNTa2pxOFb7kJVQ6LTP1dlQorL3GTqlwn
        qh9JcGhg5SVuYiWLwispy+bAslR649Vtk6vXDLtEFw2svFTFaxKOedtptdPAhRuLC+k3zuFZYBQfJpNj
        0semf57D3QrHnB7+lhEEfwCxGFIUmh5jHwAAAABJRU5ErkJggg==
</value>
  </data>
</root>